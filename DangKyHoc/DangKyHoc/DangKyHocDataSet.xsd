<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DangKyHocDataSet" targetNamespace="http://tempuri.org/DangKyHocDataSet.xsd" xmlns:mstns="http://tempuri.org/DangKyHocDataSet.xsd" xmlns="http://tempuri.org/DangKyHocDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DangKyHocConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DangKyHocConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DangKyHoc.Properties.Settings.GlobalReference.Default.DangKyHocConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountsTableAdapter" GeneratorDataComponentClassName="AccountsTableAdapter" Name="Accounts" UserDataComponentName="AccountsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DangKyHocConnectionString (Settings)" DbObjectName="DangKyHoc.dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Accounts] WHERE (([userName] = @Original_userName) AND ([userPassword] = @Original_userPassword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_userPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Accounts] ([userName], [userPassword]) VALUES (@userName, @userPassword);
SELECT userName, userPassword FROM Accounts WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@userPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userName, userPassword FROM dbo.Accounts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Accounts] SET [userName] = @userName, [userPassword] = @userPassword WHERE (([userName] = @Original_userName) AND ([userPassword] = @Original_userPassword));
SELECT userName, userPassword FROM Accounts WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@userPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_userPassword" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="userPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="userPassword" DataSetColumn="userPassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DangKyHocConnectionString (Settings)" DbObjectName="DangKyHoc.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([userName] = @Original_userName) AND ([studentName] = @Original_studentName) AND ([studentBirth] = @Original_studentBirth) AND ([studentSex] = @Original_studentSex))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_studentBirth" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="studentBirth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentSex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentSex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([userName], [studentName], [studentBirth], [studentSex]) VALUES (@userName, @studentName, @studentBirth, @studentSex);
SELECT userName, studentName, studentBirth, studentSex FROM Students WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@studentBirth" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="studentBirth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentSex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentSex" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userName, studentName, studentBirth, studentSex FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [userName] = @userName, [studentName] = @studentName, [studentBirth] = @studentBirth, [studentSex] = @studentSex WHERE (([userName] = @Original_userName) AND ([studentName] = @Original_studentName) AND ([studentBirth] = @Original_studentBirth) AND ([studentSex] = @Original_studentSex));
SELECT userName, studentName, studentBirth, studentSex FROM Students WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@studentBirth" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="studentBirth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentSex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentSex" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_studentBirth" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="studentBirth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentSex" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentSex" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="studentName" DataSetColumn="studentName" />
              <Mapping SourceColumn="studentBirth" DataSetColumn="studentBirth" />
              <Mapping SourceColumn="studentSex" DataSetColumn="studentSex" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsSemesterTableAdapter" GeneratorDataComponentClassName="StudentsSemesterTableAdapter" Name="StudentsSemester" UserDataComponentName="StudentsSemesterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DangKyHocConnectionString (Settings)" DbObjectName="DangKyHoc.dbo.StudentsSemester" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentsSemester] WHERE (([id] = @Original_id) AND ([userName] = @Original_userName) AND ([subCode] = @Original_subCode) AND ([studentTerm] = @Original_studentTerm) AND ([studentYear] = @Original_studentYear))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentTerm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentTerm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentsSemester] ([userName], [subCode], [studentTerm], [studentYear]) VALUES (@userName, @subCode, @studentTerm, @studentYear);
SELECT id, userName, subCode, studentTerm, studentYear FROM StudentsSemester WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentTerm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentTerm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, userName, subCode, studentTerm, studentYear FROM dbo.StudentsSemester</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentsSemester] SET [userName] = @userName, [subCode] = @subCode, [studentTerm] = @studentTerm, [studentYear] = @studentYear WHERE (([id] = @Original_id) AND ([userName] = @Original_userName) AND ([subCode] = @Original_subCode) AND ([studentTerm] = @Original_studentTerm) AND ([studentYear] = @Original_studentYear));
SELECT id, userName, subCode, studentTerm, studentYear FROM StudentsSemester WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentTerm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentTerm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentTerm" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentTerm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="DangKyHoc.dbo.StudentsSemester" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="subCode" DataSetColumn="subCode" />
              <Mapping SourceColumn="studentTerm" DataSetColumn="studentTerm" />
              <Mapping SourceColumn="studentYear" DataSetColumn="studentYear" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubjectsTableAdapter" GeneratorDataComponentClassName="SubjectsTableAdapter" Name="Subjects" UserDataComponentName="SubjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DangKyHocConnectionString (Settings)" DbObjectName="DangKyHoc.dbo.Subjects" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subjects] WHERE (([subCode] = @Original_subCode) AND ([subName] = @Original_subName) AND ([subNum] = @Original_subNum) AND ([subFactor] = @Original_subFactor))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_subFactor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="subFactor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subjects] ([subCode], [subName], [subNum], [subFactor]) VALUES (@subCode, @subName, @subNum, @subFactor);
SELECT subCode, subName, subNum, subFactor FROM Subjects WHERE (subCode = @subCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@subNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@subFactor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="subFactor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT subCode, subName, subNum, subFactor FROM dbo.Subjects</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subjects] SET [subCode] = @subCode, [subName] = @subName, [subNum] = @subNum, [subFactor] = @subFactor WHERE (([subCode] = @Original_subCode) AND ([subName] = @Original_subName) AND ([subNum] = @Original_subNum) AND ([subFactor] = @Original_subFactor));
SELECT subCode, subName, subNum, subFactor FROM Subjects WHERE (subCode = @subCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@subNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@subFactor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="subFactor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_subCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_subFactor" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="subFactor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="subCode" DataSetColumn="subCode" />
              <Mapping SourceColumn="subName" DataSetColumn="subName" />
              <Mapping SourceColumn="subNum" DataSetColumn="subNum" />
              <Mapping SourceColumn="subFactor" DataSetColumn="subFactor" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DangKyHocDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="DangKyHocDataSet" msprop:Generator_DataSetName="DangKyHocDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Accounts" msprop:Generator_RowEvHandlerName="AccountsRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountsRowDeleted" msprop:Generator_RowDeletingName="AccountsRowDeleting" msprop:Generator_RowEvArgName="AccountsRowChangeEvent" msprop:Generator_TablePropName="Accounts" msprop:Generator_RowChangedName="AccountsRowChanged" msprop:Generator_RowChangingName="AccountsRowChanging" msprop:Generator_TableClassName="AccountsDataTable" msprop:Generator_RowClassName="AccountsRow" msprop:Generator_TableVarName="tableAccounts" msprop:Generator_UserTableName="Accounts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userPassword" msprop:Generator_ColumnPropNameInRow="userPassword" msprop:Generator_ColumnPropNameInTable="userPasswordColumn" msprop:Generator_ColumnVarNameInTable="columnuserPassword" msprop:Generator_UserColumnName="userPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_TableVarName="tableStudents" msprop:Generator_UserTableName="Students">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentName" msprop:Generator_ColumnPropNameInRow="studentName" msprop:Generator_ColumnPropNameInTable="studentNameColumn" msprop:Generator_ColumnVarNameInTable="columnstudentName" msprop:Generator_UserColumnName="studentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentBirth" msprop:Generator_ColumnPropNameInRow="studentBirth" msprop:Generator_ColumnPropNameInTable="studentBirthColumn" msprop:Generator_ColumnVarNameInTable="columnstudentBirth" msprop:Generator_UserColumnName="studentBirth" type="xs:dateTime" />
              <xs:element name="studentSex" msprop:Generator_ColumnPropNameInRow="studentSex" msprop:Generator_ColumnPropNameInTable="studentSexColumn" msprop:Generator_ColumnVarNameInTable="columnstudentSex" msprop:Generator_UserColumnName="studentSex">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentsSemester" msprop:Generator_RowEvHandlerName="StudentsSemesterRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsSemesterRowDeleted" msprop:Generator_RowDeletingName="StudentsSemesterRowDeleting" msprop:Generator_RowEvArgName="StudentsSemesterRowChangeEvent" msprop:Generator_TablePropName="StudentsSemester" msprop:Generator_RowChangedName="StudentsSemesterRowChanged" msprop:Generator_RowChangingName="StudentsSemesterRowChanging" msprop:Generator_TableClassName="StudentsSemesterDataTable" msprop:Generator_RowClassName="StudentsSemesterRow" msprop:Generator_TableVarName="tableStudentsSemester" msprop:Generator_UserTableName="StudentsSemester">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="userName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="subCode" msprop:Generator_ColumnPropNameInRow="subCode" msprop:Generator_ColumnPropNameInTable="subCodeColumn" msprop:Generator_ColumnVarNameInTable="columnsubCode" msprop:Generator_UserColumnName="subCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentTerm" msprop:Generator_ColumnPropNameInRow="studentTerm" msprop:Generator_ColumnPropNameInTable="studentTermColumn" msprop:Generator_ColumnVarNameInTable="columnstudentTerm" msprop:Generator_UserColumnName="studentTerm" type="xs:int" />
              <xs:element name="studentYear" msprop:Generator_ColumnPropNameInRow="studentYear" msprop:Generator_ColumnPropNameInTable="studentYearColumn" msprop:Generator_ColumnVarNameInTable="columnstudentYear" msprop:Generator_UserColumnName="studentYear" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subjects" msprop:Generator_RowEvHandlerName="SubjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="SubjectsRowDeleted" msprop:Generator_RowDeletingName="SubjectsRowDeleting" msprop:Generator_RowEvArgName="SubjectsRowChangeEvent" msprop:Generator_TablePropName="Subjects" msprop:Generator_RowChangedName="SubjectsRowChanged" msprop:Generator_RowChangingName="SubjectsRowChanging" msprop:Generator_TableClassName="SubjectsDataTable" msprop:Generator_RowClassName="SubjectsRow" msprop:Generator_TableVarName="tableSubjects" msprop:Generator_UserTableName="Subjects">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="subCode" msprop:Generator_ColumnPropNameInRow="subCode" msprop:Generator_ColumnPropNameInTable="subCodeColumn" msprop:Generator_ColumnVarNameInTable="columnsubCode" msprop:Generator_UserColumnName="subCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="subName" msprop:Generator_ColumnPropNameInRow="subName" msprop:Generator_ColumnPropNameInTable="subNameColumn" msprop:Generator_ColumnVarNameInTable="columnsubName" msprop:Generator_UserColumnName="subName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="subNum" msprop:Generator_ColumnPropNameInRow="subNum" msprop:Generator_ColumnPropNameInTable="subNumColumn" msprop:Generator_ColumnVarNameInTable="columnsubNum" msprop:Generator_UserColumnName="subNum" type="xs:int" />
              <xs:element name="subFactor" msprop:Generator_ColumnPropNameInRow="subFactor" msprop:Generator_ColumnPropNameInTable="subFactorColumn" msprop:Generator_ColumnVarNameInTable="columnsubFactor" msprop:Generator_UserColumnName="subFactor" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accounts" />
      <xs:field xpath="mstns:userName" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:userName" />
    </xs:unique>
    <xs:unique name="StudentsSemester_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentsSemester" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Subjects_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subjects" />
      <xs:field xpath="mstns:subCode" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Students__userNa__267ABA7A" msdata:parent="Accounts" msdata:child="Students" msdata:parentkey="userName" msdata:childkey="userName" msprop:Generator_UserParentTable="Accounts" msprop:Generator_UserChildTable="Students" msprop:Generator_RelationVarName="relationFK__Students__userNa__267ABA7A" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_ParentPropName="AccountsRow" msprop:Generator_UserRelationName="FK__Students__userNa__267ABA7A" />
      <msdata:Relationship name="FK__StudentsS__stude__49C3F6B7" msdata:parent="Students" msdata:child="StudentsSemester" msdata:parentkey="userName" msdata:childkey="userName" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="StudentsSemester" msprop:Generator_RelationVarName="relationFK__StudentsS__stude__49C3F6B7" msprop:Generator_ChildPropName="GetStudentsSemesterRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK__StudentsS__stude__49C3F6B7" />
      <msdata:Relationship name="FK__StudentsS__subCo__4AB81AF0" msdata:parent="Subjects" msdata:child="StudentsSemester" msdata:parentkey="subCode" msdata:childkey="subCode" msprop:Generator_UserParentTable="Subjects" msprop:Generator_UserChildTable="StudentsSemester" msprop:Generator_RelationVarName="relationFK__StudentsS__subCo__4AB81AF0" msprop:Generator_UserRelationName="FK__StudentsS__subCo__4AB81AF0" msprop:Generator_ChildPropName="GetStudentsSemesterRows" msprop:Generator_ParentPropName="SubjectsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>